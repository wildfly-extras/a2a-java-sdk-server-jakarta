name: Build and Run TCK

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  # Tag of the TCK
  TCK_VERSION: 0.3.0.alpha
  # Tells uv to not need a venv, and instead use system
  UV_SYSTEM_PYTHON: 1
  SUT_JSONRPC_URL: http://localhost:8080
  SUT_GRPC_URL: http://localhost:9555
  # Longer timeout is needed to receive the events for test_streaming_methods.py::test_tasks_resubscribe
  TCK_STREAMING_TIMEOUT: 4.0


# Only run the latest job
concurrency:
  group: '${{ github.workflow }} @ ${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Run TCK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Checkout a2a-java
        uses: actions/checkout@v4
        with:
          repository: a2aproject/a2a-java
          path: a2a-java
      - name: Checkout a2a-tck
        uses: actions/checkout@v4
        with:
          repository: a2aproject/a2a-tck
          path: a2a-tck
          ref: ${{ env.TCK_VERSION }}
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build a2a-java with Maven, skipping tests
        run: |
          mvn -B install -DskipTests
        working-directory: a2a-java
      - name: Get a2a-java version and save as env var
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout) 
          echo "SDK_VERSION=${VERSION}" >> "$GITHUB_ENV"
        working-directory: a2a-java
      - name: Build the TCK server
        run: |
          mvn clean install -B -Dversion.sdk=${SDK_VERSION} -pl tck -am
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "a2a-tck/pyproject.toml"
      - name: Install uv and Python dependencies
        run: |
          pip install uv
          uv pip install -e .
        working-directory: a2a-tck
      - name: Start the WildFly SUT
        run: |
          mvn wildfly:start -B -Dversion.sdk=${SDK_VERSION} -pl tck -Dstartup-timeout=120
      - name: Run TCK
        run: |
          ./run_tck.py --sut-url ${SUT_JSONRPC_URL} --category all --transports jsonrpc,grpc --compliance-report report.json
        working-directory: a2a-tck
      - name: Start the WildFly SUT
        run: |
          mvn wildfly:shutdown

          
